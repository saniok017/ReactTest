{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","calculateWinner","squares","lines","i","length","_lines$i","Object","D_new_test_project_folder_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","b","c","Board","_this","this","renderSquare","React","Component","Game","_this2","D_new_test_project_folder_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_new_test_project_folder_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_new_test_project_folder_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14039d91.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\" \n      onClick={props.onClick}\n    > \n      {props.value}\n    </button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Board extends React.Component {\n\n\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]}\n        onClick={() =>\n        this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0,\n      this.state.stepNumber + 1);\n\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => \n    {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() =>\n            this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' +\n      (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) =>\n            this.handleClick(i)}\n             />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}